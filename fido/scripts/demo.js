function signInWithPassword() {
    // If Windows Hello is supported and there is no existing credential, offer to register Windows Hello
    if (window.webauthn && !(window.sessionStorage && window.sessionStorage.getItem('credentialID'))) {
        window.location = 'fidoregister.html';
    }
    // Otherwise, go to the inbox
    else {
        window.location = 'inbox.html';
    } 
}

function sendToServer(msg) {
    // This is where you would send data to the server   
}

function log(message) {
    console.log(message);
}

// Register user with FIDO 2.0
function makeCredential() {
    try {
        // This information would normally come from the server
        var accountInformation = {
            rpDisplayName: 'Contoso',           // Name of relying party
            displayName: 'John Doe',            // Name of user account in relying partying
            name: 'johndoe@contoso.com',        // Detailed name of account
            id: 'joed'  			            // Account identifier
        };
        
        var cryptoParameters = [
            {
                type: 'ScopedCred',
                algorithm: 'RSASSA-PKCS1-v1_5'
            }
        ];
        
        // The challenge is typically a random quantity generated by the server
        // This ensures that any assertions are freshly generated and not replays
        var attestationChallenge = 'Four score and seven years ago';

        // We won't use these optional parameters
        var options = [
             {
                 timeoutSeconds: "",
                 excludeList: "",
                 extensions: ""
             }

        ];
       
        
        WebAuthentication.makeCredential(accountInformation, cryptoParameters, attestationChallenge, options)
            .then(function (creds) {
                 window.location = 'inbox.html';
             })
            .catch(function(reason) {
                // Windows Hello isn't setup, show dialog explaining how to set it up
                if (reason.message === 'NotSupportedError') {
                    showSetupWindowsHelloDialog(true);
                }
                log('Windows Hello failed (' + reason.message + ').');
            });
    } catch(ex) {
            // Windows Hello isn't setup, show dialog explaining how to set it up
            if (reason.message === 'NotSupportedError') {
                showSetupWindowsHelloDialog(true);
            }
            log('makeCredential() failed: ' + ex);  
      }
} 

// Authenticate the user
function getAssertion() {
    try {
         // The challenge is typically a random quantity generated by the server 
         // This ensures that any assertions are freshly generated and not replays
         var assertionChallenge = 'Our fathers brought forth on this continent, a new nation';
         var options = {
                 timeoutSeconds: "",
                 // allowList: "fun",
                 extensions: ""
             };
         
        WebAuthentication.getAssertion(assertionChallenge, options)
                .then(function(sig) {
                // Assertion calls succeeds
                // Send assertion to the server
                sendToServer(sig);
                
                // Assuming confirmation, sign in to inbox
                window.location = 'inbox.html'; 
        })
        .catch(function(reason) {
            // No credential in the store. Fallback to password
            // Show dialog with failed authentication. Fallback to password. 
            log('getAssertion() failed: ' + reason);
        });               
    } catch (ex) {
        log('getAssertion() failed: ' + ex);
    }
}